input { 
 gelf {
  add_field => ["type", "ur"]
 }
 }


filter{
  grok {
    patterns_dir => ["/etc/logstash/conf.d/patterns"]
    match => [ "message", "%{USERID_IN_MESSAGE:uid}" ]
}
}

filter{
  grok {
    patterns_dir => ["/etc/logstash/conf.d/patterns"]
    match => [ "message", "%{CIPMAIN_PAGE:webpage}" ]
}
}

filter{
  grok {
    patterns_dir => ["/etc/logstash/conf.d/patterns"]
    match => [ "message", "%{CLIENT_IP:ipaddress}" ]
}
}


filter {
  grok {
    match => { "message" => "%{DATA:ourip}(?<f1>\[)%{DATA:ts}(?<f2>\])%{IP:clientip}--%{WORD:httpverb} %{URIPATHPARAM:uri} (?<httpversion>HTTP/\d\.\d)(?<response>\d{3})(?<bytes>(\-|\d*))(?<executionTime>(\-  |\d+))%{GREEDYDATA:thread}"}
  }
  date {
    match => [ "ts", "dd/MMM/yyyy:HH:mm:ss Z" ] 
  }
  mutate { 
    add_field => {"[hour]" => "%{+HH}"} 
    convert => { "bytes" => "integer" }
  }
  geoip { source => "clientip" }
  if "_geoip_lookup_failure" in [tags] { 
    mutate { 
      add_field => { "country" => "Local" } 
    }
  } else { 
    mutate { 
      add_field => { "country" => "%{geoip[country_name]}" }
    }
  }

}



output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "cip_activity"
  }
}
